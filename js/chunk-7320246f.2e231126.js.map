{"version":3,"sources":["webpack:///../../../src/components/VGrid/VRow.ts","webpack:///./src/views/home/pages/BoardList.vue?bb7e","webpack:///src/views/home/pages/BoardList.vue","webpack:///./src/views/home/pages/BoardList.vue?d53d","webpack:///./src/views/home/pages/BoardList.vue","webpack:///./node_modules/vuetify-loader/lib/runtime/installComponents.js","webpack:///../../../src/components/VGrid/grid.ts","webpack:///../../../src/components/VGrid/VContainer.ts","webpack:///./src/service/category_service.js"],"names":["breakpoints","ALIGNMENT","makeProps","props","prefix","def","alignValidator","str","alignProps","type","default","validator","justifyValidator","justifyProps","alignContentValidator","alignContentProps","propMap","align","Object","justify","alignContent","classMap","breakpointClass","className","val","breakpoint","prop","cache","name","functional","tag","dense","noGutters","render","children","cacheKey","String","classList","value","h","data","staticClass","class","_vm","this","_h","$createElement","_c","_self","attrs","_v","_l","item","index","key","staticRenderFns","components","TopicBoard","mounted","getCategory","methods","component","VCol","VContainer","VRow","module","exports","options","extendOptions","i","id","classes","fluid","mergeData","Array","TABLE_NAME","CategoryService","field","query","LC","Query","Promise","resolve","reject","include","descending","find","then","resp","console","log","catch","error","Collection","extend","save","get","createWithoutData","destroy","set","items","ids","map","containedIn","destroyAll","column","result","saveAll","level","title","equalTo","count","code","User","current"],"mappings":"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","file":"js/chunk-7320246f.2e231126.js","sourcesContent":["import './VGrid.sass'\n\nimport Vue, { PropOptions } from 'vue'\nimport mergeData from '../../util/mergeData'\nimport { upperFirst } from '../../util/helpers'\n\n// no xs\nconst breakpoints = ['sm', 'md', 'lg', 'xl']\n\nconst ALIGNMENT = ['start', 'end', 'center']\n\nfunction makeProps (prefix: string, def: () => PropOptions) {\n  return breakpoints.reduce((props, val) => {\n    props[prefix + upperFirst(val)] = def()\n    return props\n  }, {} as Dictionary<PropOptions>)\n}\n\nconst alignValidator = (str: any) => [...ALIGNMENT, 'baseline', 'stretch'].includes(str)\nconst alignProps = makeProps('align', () => ({\n  type: String,\n  default: null,\n  validator: alignValidator,\n}))\n\nconst justifyValidator = (str: any) => [...ALIGNMENT, 'space-between', 'space-around'].includes(str)\nconst justifyProps = makeProps('justify', () => ({\n  type: String,\n  default: null,\n  validator: justifyValidator,\n}))\n\nconst alignContentValidator = (str: any) => [...ALIGNMENT, 'space-between', 'space-around', 'stretch'].includes(str)\nconst alignContentProps = makeProps('alignContent', () => ({\n  type: String,\n  default: null,\n  validator: alignContentValidator,\n}))\n\nconst propMap = {\n  align: Object.keys(alignProps),\n  justify: Object.keys(justifyProps),\n  alignContent: Object.keys(alignContentProps),\n}\n\nconst classMap = {\n  align: 'align',\n  justify: 'justify',\n  alignContent: 'align-content',\n}\n\nfunction breakpointClass (type: keyof typeof propMap, prop: string, val: string) {\n  let className = classMap[type]\n  if (val == null) {\n    return undefined\n  }\n  if (prop) {\n    // alignSm -> Sm\n    const breakpoint = prop.replace(type, '')\n    className += `-${breakpoint}`\n  }\n  // .align-items-sm-center\n  className += `-${val}`\n  return className.toLowerCase()\n}\n\nconst cache = new Map<string, any[]>()\n\nexport default Vue.extend({\n  name: 'v-row',\n  functional: true,\n  props: {\n    tag: {\n      type: String,\n      default: 'div',\n    },\n    dense: Boolean,\n    noGutters: Boolean,\n    align: {\n      type: String,\n      default: null,\n      validator: alignValidator,\n    },\n    ...alignProps,\n    justify: {\n      type: String,\n      default: null,\n      validator: justifyValidator,\n    },\n    ...justifyProps,\n    alignContent: {\n      type: String,\n      default: null,\n      validator: alignContentValidator,\n    },\n    ...alignContentProps,\n  },\n  render (h, { props, data, children }) {\n    // Super-fast memoization based on props, 5x faster than JSON.stringify\n    let cacheKey = ''\n    for (const prop in props) {\n      cacheKey += String((props as any)[prop])\n    }\n    let classList = cache.get(cacheKey)\n\n    if (!classList) {\n      classList = []\n      // Loop through `align`, `justify`, `alignContent` breakpoint props\n      let type: keyof typeof propMap\n      for (type in propMap) {\n        propMap[type].forEach(prop => {\n          const value: string = (props as any)[prop]\n          const className = breakpointClass(type, prop, value)\n          if (className) classList!.push(className)\n        })\n      }\n\n      classList.push({\n        'no-gutters': props.noGutters,\n        'row--dense': props.dense,\n        [`align-${props.align}`]: props.align,\n        [`justify-${props.justify}`]: props.justify,\n        [`align-content-${props.alignContent}`]: props.alignContent,\n      })\n\n      cache.set(cacheKey, classList)\n    }\n\n    return h(\n      props.tag,\n      mergeData(data, {\n        staticClass: 'row',\n        class: classList,\n      }),\n      children\n    )\n  },\n})\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('v-container',[_c('v-row',{staticClass:\"board\"},[_c('v-col',{attrs:{\"cols\":\"12\",\"md\":\"6\"}},[_c('span',[_vm._v(\" 分类 \")])]),_c('v-col',{staticClass:\"d-none d-md-flex\",attrs:{\"cols\":\"6\"}},[_c('v-row',[_c('v-col',{attrs:{\"cols\":\"12\"}},[_c('span',[_vm._v(\" 最新 \")])])],1)],1)],1),_vm._l((_vm.categories),function(item,index){return _c('div',{key:index},[_c('topic-board',{attrs:{\"board\":item}})],1)})],2)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <v-container>\r\n    <v-row class=\"board\">\r\n      <v-col cols=\"12\" md=\"6\">\r\n        <span> 分类 </span>\r\n      </v-col>\r\n      <v-col cols=\"6\" class=\"d-none d-md-flex\">\r\n        <v-row>\r\n          <v-col cols=\"12\">\r\n            <span> 最新 </span>\r\n          </v-col>\r\n        </v-row>\r\n      </v-col>\r\n    </v-row>\r\n\r\n    <div v-for=\"(item, index) in categories\" :key=\"index\">\r\n      <topic-board :board=\"item\" />\r\n    </div>\r\n  </v-container>\r\n</template>\r\n\r\n<script>\r\nimport CategoryService from \"@/service/category_service.js\";\r\n\r\nexport default {\r\n  name: \"home\",\r\n  components: {\r\n    TopicBoard: () => import(\"@/views/home/components/TopicBoard.vue\"),\r\n  },\r\n\r\n  data: () => ({\r\n    categories: [],\r\n  }),\r\n  mounted() {\r\n    this.getCategory();\r\n  },\r\n  methods: {\r\n    getCategory() {\r\n      CategoryService.fetchAll()\r\n        .then((resp) => {\r\n          console.log(\"resp: \", resp);\r\n          resp.map((item) => {\r\n            this.categories.push({\r\n              id: item.id,\r\n              title: item.get(\"title\"),\r\n              description: item.get(\"description\"),\r\n              level: item.get(\"level\"),\r\n              topicCount: item.get(\"count\"),\r\n            });\r\n          });\r\n        })\r\n        .catch((error) => {});\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n</style>","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./BoardList.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./BoardList.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./BoardList.vue?vue&type=template&id=386ad6fa&scoped=true&\"\nimport script from \"./BoardList.vue?vue&type=script&lang=js&\"\nexport * from \"./BoardList.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"386ad6fa\",\n  null\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!../../../../node_modules/vuetify-loader/lib/runtime/installComponents.js\"\nimport { VCol } from 'vuetify/lib/components/VGrid';\nimport { VContainer } from 'vuetify/lib/components/VGrid';\nimport { VRow } from 'vuetify/lib/components/VGrid';\ninstallComponents(component, {VCol,VContainer,VRow})\n","// IMPORTANT: Do NOT use ES2015 features in this file (except for modules).\n// This module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle.\n\nmodule.exports = function installComponents (component, components) {\n  var options = typeof component.exports === 'function'\n    ? component.exports.extendOptions\n    : component.options\n\n  if (typeof component.exports === 'function') {\n    options.components = component.exports.options.components\n  }\n\n  options.components = options.components || {}\n\n  for (var i in components) {\n    options.components[i] = options.components[i] || components[i]\n  }\n}\n","// Types\nimport Vue, { VNode } from 'vue'\n\nexport default function VGrid (name: string) {\n  /* @vue/component */\n  return Vue.extend({\n    name: `v-${name}`,\n\n    functional: true,\n\n    props: {\n      id: String,\n      tag: {\n        type: String,\n        default: 'div',\n      },\n    },\n\n    render (h, { props, data, children }): VNode {\n      data.staticClass = (`${name} ${data.staticClass || ''}`).trim()\n\n      const { attrs } = data\n      if (attrs) {\n        // reset attrs to extract utility clases like pa-3\n        data.attrs = {}\n        const classes = Object.keys(attrs).filter(key => {\n          // TODO: Remove once resolved\n          // https://github.com/vuejs/vue/issues/7841\n          if (key === 'slot') return false\n\n          const value = attrs[key]\n\n          // add back data attributes like data-test=\"foo\" but do not\n          // add them as classes\n          if (key.startsWith('data-')) {\n            data.attrs![key] = value\n            return false\n          }\n\n          return value || typeof value === 'string'\n        })\n\n        if (classes.length) data.staticClass += ` ${classes.join(' ')}`\n      }\n\n      if (props.id) {\n        data.domProps = data.domProps || {}\n        data.domProps.id = props.id\n      }\n\n      return h(props.tag, data, children)\n    },\n  })\n}\n","import './_grid.sass'\nimport './VGrid.sass'\n\nimport Grid from './grid'\n\nimport mergeData from '../../util/mergeData'\n\n/* @vue/component */\nexport default Grid('container').extend({\n  name: 'v-container',\n  functional: true,\n  props: {\n    id: String,\n    tag: {\n      type: String,\n      default: 'div',\n    },\n    fluid: {\n      type: Boolean,\n      default: false,\n    },\n  },\n  render (h, { props, data, children }) {\n    let classes\n    const { attrs } = data\n    if (attrs) {\n      // reset attrs to extract utility clases like pa-3\n      data.attrs = {}\n      classes = Object.keys(attrs).filter(key => {\n        // TODO: Remove once resolved\n        // https://github.com/vuejs/vue/issues/7841\n        if (key === 'slot') return false\n\n        const value = attrs[key]\n\n        // add back data attributes like data-test=\"foo\" but do not\n        // add them as classes\n        if (key.startsWith('data-')) {\n          data.attrs![key] = value\n          return false\n        }\n\n        return value || typeof value === 'string'\n      })\n    }\n\n    if (props.id) {\n      data.domProps = data.domProps || {}\n      data.domProps.id = props.id\n    }\n\n    return h(\n      props.tag,\n      mergeData(data, {\n        staticClass: 'container',\n        class: Array<any>({\n          'container--fluid': props.fluid,\n        }).concat(classes || []),\n      }),\n      children\n    )\n  },\n})\n","import LC from 'leancloud-storage';  // 导入 leancloud 数据存储模块\r\n\r\n\r\nconst TABLE_NAME = 'Category';  // 存储数据的表名(集合)\r\nclass CategoryService {\r\n    /**\r\n     * 获取所有数据\r\n     * @returns 所有数据\r\n     */\r\n    fetchAll(field='level') {\r\n        let query = new LC.Query(TABLE_NAME);\r\n        return new Promise((resolve, reject) => {\r\n            //  include() 用于读取存储在其他表中的数据， 类似于 MySQL 的 join 查询\r\n            query.include('createdBy', 'lastEditor')\r\n                // 降序排序 \r\n                .descending(field)\r\n                .find()\r\n                .then(resp => {\r\n                    console.log('fetchAll():', resp);\r\n                    resolve(resp);\r\n                })\r\n                .catch(error => {\r\n                    console.log('fetchAll():', error);\r\n                    reject(error);\r\n                });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 添加新记录\r\n     * @param {Object} data : 以对象形式提供的数据 \r\n     * @returns 创建成功的对象\r\n     */\r\n    create(data) {\r\n        let Collection = LC.Object.extend(TABLE_NAME);\r\n        let query = new Collection(data);\r\n        return new Promise((resolve, reject) => {\r\n\r\n            query.save()\r\n                .then(resp => {\r\n                    console.log('create(data):', resp);\r\n                    resolve(resp);\r\n                })\r\n                .catch(error => {\r\n                    console.log('create(data):', error);\r\n                    reject(error);\r\n                });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param {*} id 要查找的 id 值 \r\n     * @returns 找到的记录\r\n     */\r\n    getDataById(id) {\r\n        return new Promise((resolve, reject) => {\r\n            let query = new LC.Query(TABLE_NAME);\r\n            query.get(id)\r\n                .then(resp => {\r\n                    console.log('getDataById(id): ', resp);\r\n                    resolve(resp);\r\n                })\r\n                .catch(error => {\r\n                    console.log('getDataById(id): ', error);\r\n                    reject(error);\r\n                });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 删除一条记录\r\n     * @param {*} id 要删除记录的 id\r\n     * @returns \r\n     */\r\n    delete(id) {\r\n        console.log('delete by Id:', id);\r\n        return new Promise((resolve, reject) => {\r\n            let query = LC.Object.createWithoutData(TABLE_NAME, id);\r\n            query.destroy()\r\n                .then(resp => {\r\n                    console.log('delete(id):', resp);\r\n                    resolve(resp);\r\n                })\r\n                .catch(error => {\r\n                    console.log('delete(id):', error);\r\n                    reject(error);\r\n                });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 修改数据\r\n     * @param {*} id 要修改的记录的 id\r\n     * @param {*} data 包含除 id 以外 其他字段组成的数据, 对象类型\r\n     * @returns 更新后的记录\r\n     */\r\n    update(id, data) {\r\n        console.log('update data:', data);\r\n        return new Promise((resolve, reject) => {\r\n            // 通过 id 匹配要修改的记录\r\n            let query = LC.Object.createWithoutData(TABLE_NAME, id);\r\n            query.set(data);  // 修改数据\r\n            query.save()\r\n                .then(resp => {\r\n                    console.log('update(id, data): ', resp);\r\n                    resolve(resp);\r\n                })\r\n                .catch(error => {\r\n                    console.log('update(id, data): ', error);\r\n                    reject(error);\r\n                });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * 批量删除，先按id 查询出所删除的数据，再调用destroyAll() 进行删除\r\n     * 其他批量操作类似\r\n     * @param {*} items :所有要删除的记录绷的数组\r\n     * @returns \r\n     */\r\n    deleteAll(items) {\r\n        // 获取各条记录的 id 组成的数组\r\n        let ids = items.map(item => { return item.id; });\r\n        let query = new LC.Query(TABLE_NAME);\r\n        return new Promise((resolve, reject) => {\r\n            // 根据多个 id 组成的数组查询符合条件的记录\r\n            query.containedIn('objectId', ids)\r\n                .destroyAll() // 将查询出来的数据批量删除\r\n                .then(resp => {\r\n                    console.log('deleteAll(items): ', resp);\r\n                    resolve(resp);\r\n                })\r\n                .catch(error => {\r\n                    console.log('deleteAll(items): ', error);\r\n                    reject(error);\r\n                });\r\n        });\r\n    }\r\n\r\n\r\n    /**\r\n     * 根据 id 组成的数组查找多条记录\r\n     * @param {*} ids 多个 id 值 组成的数组\r\n     */\r\n    findItemsByIds(ids) {\r\n        let query = new LC.Query(TABLE_NAME);\r\n        return new Promise((resolve, reject) => {\r\n            query.containedIn('objectId', ids)\r\n                .then(resp => {\r\n                    console.log('findItemsByIds(ids): ', resp);\r\n                    resolve(resp);\r\n                })\r\n                .catch(error => {\r\n                    console.log('findItemsByIds(ids): ', error);\r\n                    reject(error);\r\n                });\r\n        });\r\n    }\r\n\r\n\r\n    /**\r\n     * 批量更新数据\r\n     * @param {*} items :要更新的数据集合\r\n     * @param {*} column :要新的列名\r\n     * @param {*} val : 更新的值\r\n     * @returns 更新后的数据集合\r\n     */\r\n    batchUpdate(items, column, val) {\r\n        let ids = items.map(item => { return item.id; });\r\n        let query = new LC.Query(TABLE_NAME);\r\n        return new Promise((resolve, reject) => {\r\n            query.containedIn('objectId', ids)\r\n                .find()\r\n                .then(resp => {\r\n                    console.log(' batchUpdate(items, column, val): ', resp);\r\n                    return resp.map(item => {\r\n                        item.set(column, val);  // 遍历并修改 指定的 字段\r\n                        console.log(item);\r\n                        return item;\r\n                    });\r\n                })\r\n                .then(result => {\r\n                    // 批量更新数据\r\n                    LC.Object.saveAll(result)\r\n                        .then(level => {\r\n                            resolve(level);\r\n                        });\r\n                })\r\n                .catch(error => {\r\n                    console.log('updateALL(items): ', error);\r\n                    reject(error);\r\n                });\r\n        });\r\n    }\r\n\r\n\r\n    /**\r\n     * 是否已经有相应标题\r\n     * @param {*} title ：要查找的标题\r\n     * @returns true 或 false\r\n     */\r\n    exists(title) {\r\n        let query = new LC.Query(TABLE_NAME);\r\n        return new Promise((resolve, reject) => {\r\n            query.equalTo('title', title);\r\n            query.count()\r\n                .then(count => {\r\n                    console.log('exists(title):', count);\r\n                    if (count) {\r\n                        resolve(true);\r\n                    } else {\r\n                        resolve(false);\r\n                    }\r\n                })\r\n                .catch(error => {\r\n                    console.log('exists(title):', error.code);\r\n                    if (error.code == '101') {\r\n                        resolve(false);\r\n                    } else {\r\n                        reject(false);\r\n                    }\r\n                });\r\n        });\r\n    }\r\n\r\n    // 获取当前已登录的用户\r\n    currentUser() {\r\n        return LC.User.current();\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\nexport default new CategoryService();"],"sourceRoot":""}